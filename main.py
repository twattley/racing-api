import asyncio
from starlette.middleware.cors import CORSMiddleware


import uvicorn
from fastapi import FastAPI
from starlette_context.middleware import RawContextMiddleware

from src.controllers.auth_api import router as AuthAPIRouter
from src.controllers.feedback_api import router as FeedbackAPIRouter
from src.middlewares.authentication import AuthMiddleware
from src.middlewares.db_session import DBSessionMiddleware

API_PREFIX_V1 = "/racing-api/api/v1"


def create_app() -> FastAPI:
    openapi_url = "/users-api/openapi.json"
    docs_url = "/users-api/docs"

    app = FastAPI(
        title="Users - OpenAPI 3.0",
        description="No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)",
        version="0.1.0",
        openapi_url=openapi_url,
        docs_url=docs_url,
    )

    app.add_middleware(RawContextMiddleware)
    app.add_middleware(DBSessionMiddleware)
    app.add_middleware(AuthMiddleware)
    app.add_middleware(
        CORSMiddleware,
        allow_origins=["*"],  # List the URL(s) of your frontend app
        allow_credentials=True,
        allow_methods=["GET", "POST"],  # Or specify just the methods you need: ['GET', 'POST', etc.]
        allow_headers=["*"],  # Or specify just the headers you need
    )

    app.include_router(FeedbackAPIRouter, prefix=API_PREFIX_V1)
    app.include_router(AuthAPIRouter, prefix=API_PREFIX_V1)

    return app


async def main():
    return create_app()


if __name__ == "__main__":
    app = asyncio.run(main())
    uvicorn.run(app, host="0.0.0.0", port=8000)
